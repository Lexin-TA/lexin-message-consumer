name: Deployment CI-CD

on:
  push:
    branches:
      - main
      - staging
      - deploy

jobs:
  build-push-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push message consumer image
      run: |
        docker build -t ${{ secrets.DOCKER_IMAGE_MESSAGE_CONSUMER }} .
        docker push ${{ secrets.DOCKER_IMAGE_MESSAGE_CONSUMER }}

  deploy-app-engine:
    runs-on: ubuntu-latest

    env:
      ELASTICSEARCH_URL: ${{ secrets.ELASTICSEARCH_URL }}
      ELASTICSEARCH_API_KEY: ${{ secrets.ELASTICSEARCH_API_KEY }}
      ELASTICSEARCH_USERNAME: ${{ secrets.ELASTICSEARCH_USERNAME }}
      ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTICSEARCH_PASSWORD }}
      ELASTICSEARCH_LEGAL_DOCUMENT_INDEX: ${{ secrets.ELASTICSEARCH_LEGAL_DOCUMENT_INDEX }}

      RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
      RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
      RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
      RABBITMQ_PASS: ${{ secrets.RABBITMQ_PASS }}

      RABBITMQ_QUEUE: ${{ secrets.RABBITMQ_QUEUE }}
      RABBITMQ_EXCHANGE: ${{ secrets.RABBITMQ_EXCHANGE }}
      RABBITMQ_ROUTING_KEY: ${{ secrets.RABBITMQ_ROUTING_KEY }}

      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Python 3
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create Google Application Credentials json
      uses: jsdaniell/create-json@1.1.2
      with:
        name: "GOOGLE_APPLICATION_CREDENTIALS.json"
        json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: GCP authentication
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: Set environment variables to app.yaml
      uses: 73h/gae-app-yaml-replace-env-variables@v0.3
      with:
        app_yaml_path: "app.yaml"

    - name: Set up cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '>= 363.0.0'

    - name: Use gcloud to deploy to service instance
      run: gcloud app deploy app.yaml --quiet
